<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opensource on ATTS</title>
    <link>https://codenow.me/tags/opensource/</link>
    <description>Recent content in Opensource on ATTS</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 19 May 2019 15:52:45 +0900</lastBuildDate>
    
	<atom:link href="https://codenow.me/tags/opensource/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何做开源贡献者 02</title>
      <link>https://codenow.me/translation/howtocontributetoopensource02/</link>
      <pubDate>Sun, 19 May 2019 15:52:45 +0900</pubDate>
      
      <guid>https://codenow.me/translation/howtocontributetoopensource02/</guid>
      <description>四、寻找你想要贡献的项目 如果你没有过开源项目的经验，不妨参考一下美国前总统肯尼迪的一些建议，他曾经说过，“不要问你的国家可以为你做什么，问一下你可以为你的国家做什么”。
开源贡献可以在项目的任何阶段，贯穿整个项目始终。 你不必担心太多你的第一个贡献是怎么样的，看起来是怎么样的。 相反，你应该回顾一下你用过的项目和你想要用的项目。你将会发现你热衷于贡献的项目会是你经常使用的项目。
在那些项目里面，当你觉得某个地方某个东西可以更好或者更不一样时，按照你的直觉做。
开源项目并不是一个私人俱乐部，它是由像你这样的人组成的。“开源项目”只是一个特别的术语，把世界上的问题当成可修复的来看待的。
你可能在浏览 README 文件的时候发现了一个打不开的链接或一个错字。或者你是一个新用户，然后你发现有些地方走不通，或者有个问题需要加进文档里。 与其忽略它不理不顾，不如叫人来修复它，看看你能不能帮上什么忙。这就是开源项目的意义所在。
有 28% 的开源贡献都是文档类型，比如修改错字，调整格式或翻译文档。
下面的资源也许能够帮助你发现你新的开源项目：
 GitHub Explore Open Source Friday First Timers Only CodeTriage 24 Pull Requests Up For Grabs Contributor-ninja First Contributions  评估清单 当你发现了一个你想要贡献的项目，看看这个项目是不是接受贡献者，对此做一个快速的判断。否则，你的辛勤工作可能就得不到任何回复了。 这里有一个简单的清单帮助评估项目是否适合新的贡献者。
是否满足开源项目的定义
是否有许可证？一般在仓库的根目录里有个叫 LICENSE 的文件  项目是否活跃地接受贡献
看一下主分支里的提交活动。在 GitHub 里，你可以在仓库的主页面里看到相关的信息。
上一个提交是什么时候？ 这个项目有多少个贡献者？ 多久有人提交一次？（在 github 里，你可以点击顶部的 Commits 查看）  下一步，看看这个项目的 issues。
有多少个公开 issues？ 维护者对这些公开 issues 回复得快吗？ 在 issues 里是否有积极地讨论？ 这些 issues 是近期的吗？ 有已关闭的 issues 吗？（在 Github 里，在 issues 页面点击 closed 可以看到关闭的 issues）  现在看看项目的 pull requests</description>
    </item>
    
    <item>
      <title>如何做开源贡献者 01</title>
      <link>https://codenow.me/translation/howtocontributetoopensource01/</link>
      <pubDate>Sun, 12 May 2019 09:46:14 +0900</pubDate>
      
      <guid>https://codenow.me/translation/howtocontributetoopensource01/</guid>
      <description>原链接： How to Contribute to Open Source
一、为什么要为开源做贡献 给开源项目做贡献是一个具有投资价值回报的事情，在学习、传授和积累任何你可以想象到的技能经验 等等各个方面。 为什么人们要为开源做贡献？原因很多！
提高现有技能 无论是敲代码、UI 设计、平面设计、写作或整理，如果你想要实践，开源项目里可以总有一个任务适合你。
认识拥有同样爱好的人 热情的开源项目团队总是可以让人流连忘返。 许多人的终身友谊就是在参加开源项目时认识的，无论是在会议里遇到还是在深夜里讨论墨西哥卷饼，都保持着良好的联系。
找到导师或者传授他人 在一个共享项目里和别人合作意味着你不得不告诉别人你的做事方式以及向他人寻求帮助。 学习和教学对于每一个参加的人来说，都会变的日常和丰富。
建立公共事务帮助你提高声誉以及事业 根据定义，你所有的开源项目都是公共的，意味着你在任何地方都可以以它们为例子来证明你的能力。
学习通用技能 开源项目提供很多锻炼领导力和管理能力的机会，像解决冲突、管理团队和确定工作的优先级。
能够让你作出改变，就算是小改变 参加开源项目不意味着你是一个终身贡献者。你有没有在什么网站上看到过什么错字，然后希望有人可以纠正它，其实你可以去做。 开源项目通过它们的活动帮助人们感受到组织的氛围以及它们如何体验这个世界的。这本身就很有意义。
二、贡献什么 如果你是一个新手贡献者，这个过程看上去有点吓人。  怎么找到合适的项目？如果不会敲代码怎么办？如果出了错怎么办？  别担心，有各种参与开源项目的方式！ 为了能让你充分利用自身经验，下面有一些提示。
你不必贡献代码 对于贡献开源的一个常见误解就是你一定要贡献代码。事实上，这是一个项目里最被忽视的一个部分。
你喜欢活动策划吗？  组织项目的研讨会或者聚会，像@fzamperin 为 NodeSchool 做的那样 组织项目会议 帮助社区成员找到合适的会议室和写会议提案  你喜欢设计吗？  重组布局，帮助项目可读性 进行用户研究，改进项目的导航条和目录，像 Drupal 建议的那样 整理设计风格指南，帮助项目拥有一个一致的视觉效果 设计 T 恤或者新 logo，像 hapi.js 的贡献者做的那样  你喜欢写作吗？  写项目文档或者改进项目文档 建立一个示例文件夹，展示项目的使用方式 为项目启动简报，或从邮件列表里挑出一些精彩的集锦 写项目教程，像 PyPA 的贡献者做的那样 翻译项目文档  你喜欢整理东西吗？  对于重复的 issues 的链接，建议增加一个新的 issue 标签，保持事情的调整性 浏览公开 issues，建议关闭旧的 issues 在最近的公开 issues 里问具体的问题，使讨论向前推进  你喜欢敲代码吗？  找到一个待解决的公开 issue，像 @dianjin 为 Leaflet 做的那样 询问你是否可以帮助写一些新功能 使项目启动自动化 改进工具和测试  你喜欢帮助别人吗？  在像 Stack Overflow 或 Reddit 的网站上解答有关项目的问题，像这个 Postgres 例子一样 在公开 issues 为人解答疑问 帮助调节项目与外界的沟通渠道  你喜欢帮助别人有关代码的事吗？  审核别人提交的代码 写项目使用教程 为贡献者提供指导，像 @ereichert 为 @bronzdoc 在 Rust 上做的那样  你不一定要做软件项目！ 虽然开源项目通常指软件，你也可以尝试别的东西。还有很多其它像书籍、食谱、列表或者类等形式的开源项目。 例子：</description>
    </item>
    
    <item>
      <title>手把手带你创建你第一个 GitHub 贡献</title>
      <link>https://codenow.me/translation/making_first_contribution/</link>
      <pubDate>Sat, 04 May 2019 17:20:23 +0900</pubDate>
      
      <guid>https://codenow.me/translation/making_first_contribution/</guid>
      <description>原链接： A Step by Step Guide to Making Your First GitHub Contribution 
前言 如果你还没有 Github 账户，或者不知道什么是 Git，请阅读：编程菜鸟？你昨天就应该把 Git 给学了
拜见老师 希望你来这之前已经注册好 Github 账户并做好开始第一个开源项目贡献的准备了。 作为一个新手，贡献一个项目可能会觉得可怕。我明白，我也曾经试过。我花了很长时间才完成我的第一个 Pull Request。这就是为什么我希望你认识 Roshan Jossey 的原因。Roshan 建了一个 Github 仓库 First Contributions ，手把手带新人过一遍 Github 的贡献流程，还提供了一个仓库给大家做自己的第一个贡献。
开始你的第一个开源项目贡献 1. Fork 仓库 打开 First Contributions 这个仓库，点击页面上的 Fork 按钮。这样会创建一份仓库备份到你自己的账户。 2. 克隆仓库 现在把这个仓库克隆到你自己的电脑上。点击 clone 按钮 再点击 copy to clipboard 图标。 打开终端并运行以下的 git 指令：
git clone &amp;quot;你刚刚拷贝到的地址&amp;quot;  你刚刚拷贝到的地址（不包括双引号）就是 First Contributions 这个仓库的地址。查看你之前的步骤去获得这个地址。 比如：</description>
    </item>
    
  </channel>
</rss>